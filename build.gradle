import org.gradle.internal.os.OperatingSystem

buildscript {
    ext {
        springBootVersion = '1.5.4.RELEASE'
        dockerPluginVersion = '1.2'
        springCloudConsulVersion = '1.2.1.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("se.transmode.gradle:gradle-docker:${dockerPluginVersion}")
        classpath "com.netflix.nebula:gradle-extra-configurations-plugin:+"
    }
}

version = '0.0.1'

repositories {
    mavenCentral()
}
allprojects {
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'nebula.optional-base'
    apply plugin: 'docker'

    group = 'slinnik284'

    repositories {
        mavenCentral()
        jcenter()
        maven { url "http://dl.bintray.com/aatarasoff/maven" }
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-starter-parent:Brixton.SR7"
        }

        dependencies {
//            dependency "org.apache.thrift:libthrift:${thriftVersion}"
//            dependency 'info.developerblog.spring.thrift:spring-thrift-starter:0.1.3'
//            dependency 'info.developerblog.spring.thrift:spring-thrift-api-gateway:0.0.3'

            dependency "org.springframework.cloud:spring-cloud-consul-core:${springCloudConsulVersion}"
            dependency "org.springframework.cloud:spring-cloud-consul-discovery:${springCloudConsulVersion}"
            dependency "org.springframework.cloud:spring-cloud-consul-config:${springCloudConsulVersion}"
        }
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'groovy'
    apply plugin: 'idea'
    apply plugin: 'spring-boot'
//    apply plugin: 'thrift'

/*    task generateThriftJava(type: ru.trylogic.gradle.thrift.tasks.ThriftCompileTask) {
        generator = 'java:private-members'
        destinationDir = file("generated-src/generated/java")
    }


    sourceSets {
        main {
            java {
                srcDir generateThriftJava.destinationDir
            }
        }
    }

    clean {
        delete generateThriftJava.destinationDir
    }


    idea {
        module {
            sourceDirs += file('src/main/thrift')
            sourceDirs += generateThriftJava.destinationDir
        }
    }

    compileJava.dependsOn generateThriftJava*/


    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    jar {
        archiveName = project.name + ".jar"
    }

    repositories {
        ivy {
            artifactPattern "http://dl.bintray.com/bsideup/thirdparty/[artifact]-[revision](-[classifier]).[ext]"
        }
    }

    dependencies {
        Map platformMapping = [
                (OperatingSystem.WINDOWS): 'win',
                (OperatingSystem.MAC_OS) : 'osx'
        ].withDefault { 'nix' }

//        thrift "org.apache.thrift:thrift:$thriftVersion:${platformMapping.get(OperatingSystem.current())}@bin"

//        compile "org.apache.thrift:libthrift"
        compile 'org.codehaus.groovy:groovy'
        compile "org.projectlombok:lombok"

        testCompile("org.springframework.boot:spring-boot-starter-test")
    }

    task buildDocker(type: Docker, dependsOn: build) {
        push = true
        applicationName = jar.baseName
        dockerfile = file('Dockerfile')
        doFirst {
            copy {
                from jar
                into stageDir
            }
        }
    }

    springBoot {
        executable = true
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = gradleWrapperVersion
}